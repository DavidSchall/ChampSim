#include "ooo_cpu.h"

// #define STATIC_TABLE_SIZE 524288

#define STATIC_SIZE_KBYTE 8
#define STATIC_TABLE_SIZE STATIC_SIZE_KBYTE * 8192


int static_table[NUM_CPUS][STATIC_TABLE_SIZE];

void O3_CPU::initialize_branch_predictor()
{
    cout << "CPU " << cpu << " Static branch predictor" << endl;

    int STORAGESIZE = STATIC_TABLE_SIZE;
    fprintf(stdout, " (TOTAL %d bits = %d Kbits = %d kB) \n", STORAGESIZE,
					STORAGESIZE / 1024, STORAGESIZE / 8192);
    

    for(int i = 0; i < STATIC_TABLE_SIZE; i++)
        static_table[cpu][i] = 0;
}

uint8_t O3_CPU::predict_branch(uint64_t ip)
{
    uint32_t hash = ip % STATIC_TABLE_SIZE;
    uint8_t prediction = static_table[cpu][hash];

    return prediction;
}

void O3_CPU::last_branch_result(uint64_t ip, uint8_t taken)
{
    uint32_t hash = ip % STATIC_TABLE_SIZE;

    static_table[cpu][hash] = taken;
}
